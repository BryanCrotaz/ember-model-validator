<div class="ui masthead minimum vertical segment">
  <div class="ui container">
    <div class="introduction">
      <h1 class="ui header">
        Ember Model Validator Usage
      </h1>
    </div>
  </div>
</div>

<div class="ui main container">
  <h2 class="ui header">
    One Mixin to Validate Them All
  </h2>

  <div class="no example">

    <p>
      <strong>Ember-model-validator</strong> provides a mixin to be included in your models for adding validation support. This mixin can be imported from your app's namespace (e.g. ../mixins/model-validator in your models).
    </p>

    <p>
      By including Ember-model-validator's mixin into your model, this will have a <code class="ui label">validate</code> function available, it is a synchronous function which returns either <i>true</i> or <i>false</i>.
    </p>

    <p>
      You can also pass an option hash for excluding or forcing certain attributes to be validated, and to prevent errors to be added.
    </p>

    {{#code-block language='javascript'}}
//Using `except`
myModel.validate({except:['name', 'cellphone']});

//Using `only`
myModel.validate({only:['favoritColor', 'mainstreamCode']});

//Using `addErrors`
myModel.validate({addErrors:false});
// This will validate the model but won't add any errors.
    {{/code-block}}

  </div>

  <h2 class="ui dividing header">
    An Usage Example
  </h2>

  <div class="no example">

    {{#code-block language='javascript'}}
import DS from 'ember-data';
import Validator from '../mixins/model-validator';

export default DS.Model.extend(Validator,{

  name: DS.attr('string'),
  login: DS.attr('string'),
  secondName: DS.attr('string'),
  email: DS.attr('string'),
  password: DS.attr('string'),
  passwordConfirmation: DS.attr('string'),

  validations: {
    name: {
      presence: { errorAs:'profile.name' },
      inclusion: { in: ['Jose Rene', 'Aristi Gol', 'Armani'], message: 'Solo verde a morir' }
    },
    login: {
      absence: true
    },
    secondName: {
      exclusion: { in: ['Gionvany Hernandez', 'Wilder Medina'], message: 'Que iNrresponsabilidad' }
    },
    email: {
      presence: true,
      email: true
    },
    password: {
      custom: function(key, value, _this){
        return String(value) === String(_this.get('socialSecurity')) ? false : true;
      },
      match: 'passwordConfirmation',
      mustContainCapital: true,
      mustContainLower: true,
      mustContainNumber: true,
      mustContainSpecial: true
    }
  }

});
    {{/code-block}}

    <p>After setting the validations on your model you will be able to:</p>

    {{#code-block language='javascript'}}
import Ember from 'ember';

export default Ember.Route.extend(
  {
    actions: {
      saveFakeModel: function() {
        let fakeModel = this.get('model');

        if(fakeModel.validate()){
          fakeModel.save().then(
            // Success
            () => {
              // Alert success
              console.log('ooooh yeah we just saved the FakeModel...');
            },
            // Error handling
            (error) => {
              // Alert failure
              console.log('There was a problem saving the FakeModel...');
              console.log(error);
            }
          );
        }else{
          fakeModel.get('errors');
        }
      }
    }
  }
);
    {{/code-block}}
  </div>
</div>